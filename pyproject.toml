[project]
name = "npc_sessions"
version = "0.0.16"
description = "Tools and interfaces for working with behavior and epyhys sessions from the Mindscope Neuropixels team, in the cloud."
authors = [
    { name = "Ben Hardcastle", email = "ben.hardcastle@alleninstitute.org" },
]
dependencies = [
    "npc-lims>=0.1.0",
    "polars[all]>=0.18.14",
    "h5py>=3.9.0",
    "pandas[aws,excel,fss,hdf5,performance,plot]>=2.0.3",
    "universal-pathlib>=0.1.1",
    "s3fs>=2023.6.0",
    "pynwb>=2.5.0",
    "crc32c>=2.3.post0",
    "rich>=13.5.2",
    "zarr>=2.16.1",
    "wavpack-numcodecs>=0.1.4",
    "matplotlib>=3.7.2",
    "scipy>=1.9.3",
    "DynamicRoutingTask>=0.1.7",
    "numba>=0.57.1",
    "jupyter>=1.0.0",
    "ipywidgets>=8.1.0",
    "ipympl>=0.9.3",
    "opencv-python-headless>=4.8.0.76",
    "python-dotenv>=1.0.0",
    "ndx-events>=0.2.0",
    "SimpleITK>=2.2.1",
    "pyarrow>=13.0.0",
]
requires-python = ">=3.9"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]

[project.license]
text = "MIT"

[project.urls]
Repository = "https://github.com/AllenInstitute/npc_sessions"
Issues = "https://github.com/AllenInstitute/npc_sessions/issues"

[project.optional-dependencies]
onsite = [
    "np-session>=0.6.34",
]

[tool.pdm.dev-dependencies]
dev = [
    "pytest>=7.4.0",
    "ruff>=0.0.282",
    "pdm-bump>=0.7.3",
    "mypy>=1.4.1",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
]

[tool.pdm.scripts]
ruff = "ruff check src --fix-only"
black = "black src"
test = "pytest --cov"
mypy = "mypy src --install-types --non-interactive"
bumpver = "pdm bump micro"
tag = "pdm bump tag"

[tool.pdm.scripts.prebuild]
composite = [
    "black",
    "ruff",
    "test",
    "mypy",
]

[tool.pdm.scripts.dryrun]
composite = [
    "prebuild",
    "pdm publish --repository testpypi",
]

[tool.pdm.scripts.pub]
composite = [
    "prebuild",
    "bumpver",
    "pdm publish",
]

[tool.setuptools.packages.find]
where = [
    "src",
]

[tool.setuptools.package-data]
npc_sessions = [
    "py.typed",
]

[tool.ruff]
fix = true
ignore-init-module-imports = true
select = [
    "ANN",
    "B",
    "C",
    "E",
    "F",
    "I",
    "RUF100",
    "N",
    "U",
    "W",
    "YTT",
]
extend-exclude = [
    "tests",
]
src = [
    "src",
    "tests",
]
target-version = "py39"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.black]
target-version = [
    "py39",
]

[tool.coverage.paths]
source = [
    "src",
]

[tool.coverage.run]
branch = true
source = [
    "src",
]

[tool.coverage.report]
skip_covered = true
show_missing = true
skip_empty = true
exclude_also = [
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@(abc.)?abstractmethod",
    "@typing.runtime_checkable",
]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--doctest-modules",
    "--ignore-glob=*scripts*,*examples*",
    "--cov",
    "--doctest-glob=*README.md",
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ELLIPSIS",
]
testpaths = [
    ".",
    "src",
    "tests",
]

[tool.mypy]
check_untyped_defs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false
disallow_any_unimported = false
warn_return_any = false
warn_unused_ignores = true
no_implicit_optional = true
show_error_codes = true
ignore_missing_imports = true
implicit_reexport = false

[build-system]
requires = [
    "setuptools>=61",
    "wheel",
]
build-backend = "setuptools.build_meta"
