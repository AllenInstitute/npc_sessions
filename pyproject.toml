[project]
name = "npc_sessions"
version = "0.0.271"
description = "NWB-conversion for behavior and epyhys sessions from the Mindscope Neuropixels team, in the cloud."
authors = [
    { name = "Ben Hardcastle", email = "ben.hardcastle@alleninstitute.org" },
    { name = "Arjun Sridhar", email = "arjun.sridhar@alleninstitute.org" },
    { name = "Ethan McBride", email = "ethan.mcbride@alleninstitute.org" },
    { name = "Corbett Bennett", email = "corbettb@alleninstitute.org" },
    { name = "Sam Gale", email = "samg@alleninstitute.org" },
    { name = "Christopher Mochizuki", email = "chrism@alleninstitute.org" },
]
dependencies = [
    "pandas>=2.0",
    "pynwb>=2.8.2,<3.0",
    "rich>=13.5.2",
    "matplotlib>=3.7.2",
    "scipy>=1.9.3",
    "DynamicRoutingTask<0.1.106",
    "numba>=0.57.1",
    "python-dotenv>=1.0.0",
    "ndx-events>=0.2.0",
    "hdmf==3.14.6",
    "ndx-pose>=0.1.1",
    "tables>=3.9.2",
    "aind-data-schema==1.1.1",
    "pydantic<=2.7.4",
    "npc-lims>=0.1.186",
    "npc-sync>=0.1.25",
    "npc-ephys>=0.1.35",
    "npc-stim>=0.1.14",
    "npc-samstim>=0.1.13",
    "npc-session>=0.1.40",
    "npc-mvr>=0.1.13",
    "npc-io>=0.1.32",
    "aind-session>=0.3.15",
    "polars[pyarrow]>=1.24.0",
    "aind-data-access-api[docdb]>=1.2.2",
    "aind-data-schema-models==0.5.7",
    "numcodecs<=0.16",
]
requires-python = ">=3.9"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]

[project.license]
text = "MIT"

[project.urls]
Repository = "https://github.com/AllenInstitute/npc_sessions"
Issues = "https://github.com/AllenInstitute/npc_sessions/issues"


[dependency-groups]
task_runner = ["poethepoet>=0.33.1"]
linting = ["black>=25.1.0", "isort>=6.0.1", "ruff>=0.11.2"]
testing = ["pytest>=7.4.0", "mypy>=1.4.1", "pytest-cov>=4.1.0", "pytest-xdist>=3.3.1"]
bump = [
    "bump-my-version>=1.1.1",
    "git-changelog>=2.5.3",
]

[project.scripts]
task = "poethepoet:main"

[tool.uv]
package = true
default-groups = "all"

[tool.bumpversion]
tag = true
allow_dirty = true
commit = true
commit_args = "-a"
message = "Bump version: {current_version} â†’ {new_version} [skip actions]"
pre_commit_hooks = [
    "uv lock --upgrade-package npc_sessions",
    "git-changelog -o CHANGELOG.md",
    "uv build",
    "uv publish",
]
post_commit_hooks = [
    "git push origin main",
    "git push --tags",
]

[tool.poe.tasks]
mypy = "mypy src --install-types --non-interactive"
pytest = "pytest --cov-report term-missing:skip-covered --cov-report=html"
test = ["mypy", "pytest"]
ruff = "ruff check src --fix-only"
black = "black src"
format = ["ruff", "black"]
bump_pub_tag = "bump-my-version bump patch"
release = ["format", "bump_pub_tag"]


[tool.setuptools.packages.find]
where = [
    "src",
]

[tool.setuptools.package-data]
npc_sessions = [
    "py.typed",
    "notebooks/*.ipynb",
]

[tool.ruff]
fix = true
ignore-init-module-imports = true
select = [
    "ANN",
    "B",
    "C",
    "E",
    "F",
    "I",
    "RUF100",
    "N",
    "UP",
    "W",
    "YTT",
]
extend-exclude = [
    "tests",
]
src = [
    "src",
    "tests",
]
target-version = "py39"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.black]
target-version = [
    "py39",
]

[tool.coverage.paths]
source = [
    "src",
]

[tool.coverage.run]
branch = true
source = [
    "src",
]

[tool.coverage.report]
skip_covered = true
show_missing = true
skip_empty = true
exclude_also = [
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@(abc.)?abstractmethod",
    "@typing.runtime_checkable",
]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--doctest-modules",
    "--ignore-glob=*scripts*,*examples*",
    "--cov",
    "--cov-report=xml",
    "--cov-config=pyproject.toml",
    "--doctest-glob=*README.md",
    "-x",
    "-n=auto",
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ELLIPSIS",
]
testpaths = [
    "src",
    "tests",
]

[tool.mypy]
check_untyped_defs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false
disallow_any_unimported = false
warn_return_any = false
warn_unused_ignores = true
no_implicit_optional = true
show_error_codes = true
ignore_missing_imports = true
implicit_reexport = false
exclude = [
    "src/npc_sessions/plots",
    "src/npc_sessions/scripts",
]

[build-system]
requires = [
    "setuptools>=61",
    "wheel",
]
build-backend = "setuptools.build_meta"
